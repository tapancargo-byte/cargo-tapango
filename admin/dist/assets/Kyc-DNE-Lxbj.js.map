{"version":3,"file":"Kyc-DNE-Lxbj.js","sources":["../../src/pages/Kyc.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';\r\nimport { Button } from '../components/ui/button';\r\nimport { Input } from '../components/ui/input';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../components/ui/table';\r\nimport { Badge } from '../components/ui/badge';\r\nimport { useAuth } from '../providers/AuthProvider';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface Row { name: string; last_modified: string; status?: string }\r\n\r\ntype StatusFilter = 'all' | 'pending' | 'approved' | 'rejected';\r\n\r\nexport default function Kyc() {\r\n  const { isAdmin } = useAuth();\r\n  const [items, setItems] = React.useState<Row[]>([]);\r\n  const [statusFilter, setStatusFilter] = React.useState<StatusFilter>('all');\r\n  const [search, setSearch] = React.useState('');\r\n  const [previewUrl, setPreviewUrl] = React.useState<string | null>(null);\r\n  const [openName, setOpenName] = React.useState<string | null>(null);\r\n\r\n  const load = React.useCallback(async () => {\r\n    if (!supabase || !isAdmin) return;\r\n    const { data, error } = await supabase.storage.from('kyc').list('', { limit: 100, search: search || undefined });\r\n    if (!error && data) {\r\n      const { data: reviews } = await (supabase as any).from('kyc_reviews').select('path,status');\r\n      const map = new Map<string, string>((reviews ?? []).map((r: any) => [r.path, r.status]));\r\n      setItems((data as any).map((d: any) => ({ ...d, status: map.get(d.name) ?? 'pending' })));\r\n    } else setItems([]);\r\n  }, [isAdmin, search]);\r\n\r\n  React.useEffect(() => { load(); }, [load]);\r\n\r\n  const filtered = items.filter(r => statusFilter === 'all' || (r.status ?? 'pending') === statusFilter);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\" data-testid=\"kyc-title\">KYC Review</h1>\r\n          <p className=\"text-muted-foreground\">Moderate driver identity documents</p>\r\n        </div>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle data-testid=\"kyc-filters\">Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex flex-wrap gap-3 items-end\">\r\n            <div className=\"min-w-[220px]\">\r\n              <label className=\"block text-xs text-muted-foreground mb-1\">Search</label>\r\n              <Input placeholder=\"Search filename\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-xs text-muted-foreground mb-1\">Status</label>\r\n              <select className=\"border rounded h-9 px-2\" value={statusFilter} onChange={(e) => setStatusFilter(e.target.value as StatusFilter)}>\r\n                <option value=\"all\">All</option>\r\n                <option value=\"pending\">Pending</option>\r\n                <option value=\"approved\">Approved</option>\r\n                <option value=\"rejected\">Rejected</option>\r\n              </select>\r\n            </div>\r\n            <Button onClick={load}>Reload</Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle data-testid=\"kyc-docs\">Documents ({filtered.length})</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Path</TableHead>\r\n                <TableHead>Status</TableHead>\r\n                <TableHead>Last Modified</TableHead>\r\n                <TableHead>Actions</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {filtered.map((r) => (\r\n                <TableRow key={`${r.name}-${r.last_modified}`}>\r\n                  <TableCell>{r.name}</TableCell>\r\n                  <TableCell>\r\n                    <Badge className=\"bg-gray-100 dark:bg-gray-800 border border-gray-300/50\">\r\n                      {r.status ?? 'pending'}\r\n                    </Badge>\r\n                  </TableCell>\r\n                  <TableCell>{new Date(r.last_modified).toLocaleString()}</TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex gap-2\">\r\n                      <Button variant=\"secondary\" onClick={async () => {\r\n                        const { data } = await supabase.storage.from('kyc').createSignedUrl(r.name, 300);\r\n                        setPreviewUrl((data as any)?.signedUrl ?? null);\r\n                        setOpenName(r.name);\r\n                      }}>Preview</Button>\r\n                      <Button variant=\"outline\" onClick={async () => {\r\n                        const { data } = await supabase.storage.from('kyc').createSignedUrl(r.name, 600);\r\n                        const url = (data as any)?.signedUrl; if (url) window.open(url, '_blank');\r\n                      }}>Download</Button>\r\n                      <Button onClick={async () => {\r\n                        const { data } = await supabase.auth.getUser();\r\n                        const reviewer = (data as any)?.user?.email ?? (data as any)?.user?.id ?? 'admin';\r\n                        await (supabase as any).from('kyc_reviews').upsert({ path: r.name, status: 'approved', reviewed_by: reviewer });\r\n                        await load();\r\n                      }}>Approve</Button>\r\n                      <Button variant=\"destructive\" onClick={async () => {\r\n                        const { data } = await supabase.auth.getUser();\r\n                        const reviewer = (data as any)?.user?.email ?? (data as any)?.user?.id ?? 'admin';\r\n                        await (supabase as any).from('kyc_reviews').upsert({ path: r.name, status: 'rejected', reviewed_by: reviewer });\r\n                        await load();\r\n                      }}>Reject</Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n\r\n          {previewUrl && openName && (\r\n            <div className=\"mt-4\">\r\n              <div className=\"text-sm text-muted-foreground\">Preview: {openName}</div>\r\n              <img src={previewUrl} alt=\"Preview\" className=\"mt-2 rounded border max-h-[420px]\" />\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Kyc","isAdmin","useAuth","items","setItems","React","statusFilter","setStatusFilter","search","setSearch","previewUrl","setPreviewUrl","openName","setOpenName","load","supabase","data","error","reviews","map","r","d","filtered","jsxDEV","Card","CardHeader","CardTitle","CardContent","Input","e","Button","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Badge","url","reviewer"],"mappings":"wJAaA,SAAwBA,GAAM,CAC5B,KAAM,CAAE,QAAAC,CAAA,EAAYC,EAAA,EACd,CAACC,EAAOC,CAAQ,EAAIC,EAAM,SAAgB,CAAA,CAAE,EAC5C,CAACC,EAAcC,CAAe,EAAIF,EAAM,SAAuB,KAAK,EACpE,CAACG,EAAQC,CAAS,EAAIJ,EAAM,SAAS,EAAE,EACvC,CAACK,EAAYC,CAAa,EAAIN,EAAM,SAAwB,IAAI,EAChE,CAACO,EAAUC,CAAW,EAAIR,EAAM,SAAwB,IAAI,EAE5DS,EAAOT,EAAM,YAAY,SAAY,CACzC,GAAI,CAACU,GAAY,CAACd,EAAS,OAC3B,KAAM,CAAE,KAAAe,EAAM,MAAAC,CAAA,EAAU,MAAMF,EAAS,QAAQ,KAAK,KAAK,EAAE,KAAK,GAAI,CAAE,MAAO,IAAK,OAAQP,GAAU,OAAW,EAC/G,GAAI,CAACS,GAASD,EAAM,CAClB,KAAM,CAAE,KAAME,CAAA,EAAY,MAAOH,EAAiB,KAAK,aAAa,EAAE,OAAO,aAAa,EACpFI,EAAM,IAAI,KAAqBD,GAAW,CAAA,GAAI,IAAKE,GAAW,CAACA,EAAE,KAAMA,EAAE,MAAM,CAAC,CAAC,EACvFhB,EAAUY,EAAa,IAAKK,IAAY,CAAE,GAAGA,EAAG,OAAQF,EAAI,IAAIE,EAAE,IAAI,GAAK,SAAA,EAAY,CAAC,CAC1F,MAAOjB,EAAS,EAAE,CACpB,EAAG,CAACH,EAASO,CAAM,CAAC,EAEpBH,EAAM,UAAU,IAAM,CAAES,EAAA,CAAQ,EAAG,CAACA,CAAI,CAAC,EAEzC,MAAMQ,EAAWnB,EAAM,OAAOiB,GAAKd,IAAiB,QAAUc,EAAE,QAAU,aAAed,CAAY,EAErG,OACEiB,EAAAA,OAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,SAAC,MAAA,CAAI,UAAU,oCACb,SAAAA,EAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,OAAC,KAAA,CAAG,UAAU,oCAAoC,cAAY,YAAY,SAAA,cAA1E,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAoF,EACpFA,SAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,oCAAA,EAArC,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAuE,CAAA,CAAA,EAFzE,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAGA,CAAA,EAJF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAKA,WAECC,EAAA,CACC,SAAA,CAAAD,EAAAA,OAACE,EAAA,CACC,SAAAF,EAAAA,OAACG,EAAA,CAAU,cAAY,cAAc,SAAA,WAArC,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAA4C,CAAA,EAD9C,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAEA,EACAH,SAACI,EAAA,CACC,SAAAJ,EAAAA,OAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAA,EAAAA,OAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAA,SAAC,QAAA,CAAM,UAAU,2CAA2C,SAAA,QAAA,EAA5D,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAkE,EAClEA,EAAAA,OAACK,EAAA,CAAM,YAAY,kBAAkB,MAAOpB,EAAQ,SAAWqB,GAAMpB,EAAUoB,EAAE,OAAO,KAAK,CAAA,EAA7F,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAgG,CAAA,CAAA,EAFlG,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAGA,WACC,MAAA,CACC,SAAA,CAAAN,SAAC,QAAA,CAAM,UAAU,2CAA2C,SAAA,QAAA,EAA5D,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAkE,EAClEA,EAAAA,OAAC,SAAA,CAAO,UAAU,0BAA0B,MAAOjB,EAAc,SAAWuB,GAAMtB,EAAgBsB,EAAE,OAAO,KAAqB,EAC9H,SAAA,CAAAN,SAAC,SAAA,CAAO,MAAM,MAAM,SAAA,KAAA,EAApB,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAuB,EACvBA,SAAC,SAAA,CAAO,MAAM,UAAU,SAAA,SAAA,EAAxB,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAA+B,EAC/BA,SAAC,SAAA,CAAO,MAAM,WAAW,SAAA,UAAA,EAAzB,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAiC,EACjCA,SAAC,SAAA,CAAO,MAAM,WAAW,SAAA,UAAA,EAAzB,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAiC,CAAA,CAAA,EAJnC,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAKA,CAAA,CAAA,EAPF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAQA,EACAA,SAACO,EAAA,CAAO,QAAShB,EAAM,SAAA,QAAA,EAAvB,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAA6B,CAAA,CAAA,EAd/B,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAeA,CAAA,EAhBF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAiBA,CAAA,CAAA,EArBF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAsBA,WAECU,EAAA,CACC,SAAA,CAAAD,SAACE,EAAA,CACC,SAAAF,EAAAA,OAACG,EAAA,CAAU,cAAY,WAAW,SAAA,CAAA,cAAYJ,EAAS,OAAO,GAAA,CAAA,EAA9D,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAA+D,CAAA,EADjE,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAEA,WACCK,EAAA,CACC,SAAA,CAAAJ,SAACQ,EAAA,CACC,SAAA,CAAAR,EAAAA,OAACS,EAAA,CACC,kBAACC,EAAA,CACC,SAAA,CAAAV,EAAAA,OAACW,GAAU,SAAA,MAAA,EAAX,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAe,EACfX,EAAAA,OAACW,GAAU,SAAA,QAAA,EAAX,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAiB,EACjBX,EAAAA,OAACW,GAAU,SAAA,eAAA,EAAX,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAwB,EACxBX,EAAAA,OAACW,GAAU,SAAA,SAAA,EAAX,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAkB,CAAA,CAAA,EAJpB,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAKA,CAAA,EANF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAOA,WACCC,EAAA,CACE,SAAAb,EAAS,IAAKF,YACZa,EAAA,CACC,SAAA,CAAAV,EAAAA,OAACa,EAAA,CAAW,WAAE,IAAA,EAAd,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAmB,EACnBb,EAAAA,OAACa,GACC,SAAAb,EAAAA,OAACc,EAAA,CAAM,UAAU,yDACd,SAAAjB,EAAE,QAAU,SAAA,EADf,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAEA,CAAA,EAHF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAIA,EACAG,EAAAA,OAACa,GAAW,SAAA,IAAI,KAAKhB,EAAE,aAAa,EAAE,kBAAtC,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAuD,EACvDG,SAACa,EAAA,CACC,SAAAb,EAAAA,OAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,OAACO,EAAA,CAAO,QAAQ,YAAY,QAAS,SAAY,CAC/C,KAAM,CAAE,KAAAd,CAAA,EAAS,MAAMD,EAAS,QAAQ,KAAK,KAAK,EAAE,gBAAgBK,EAAE,KAAM,GAAG,EAC/ET,EAAeK,GAAc,WAAa,IAAI,EAC9CH,EAAYO,EAAE,IAAI,CACpB,EAAG,SAAA,WAJH,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAIU,EACVG,EAAAA,OAACO,EAAA,CAAO,QAAQ,UAAU,QAAS,SAAY,CAC7C,KAAM,CAAE,KAAAd,CAAA,EAAS,MAAMD,EAAS,QAAQ,KAAK,KAAK,EAAE,gBAAgBK,EAAE,KAAM,GAAG,EACzEkB,EAAOtB,GAAc,UAAesB,GAAK,OAAO,KAAKA,EAAK,QAAQ,CAC1E,EAAG,SAAA,YAHH,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAGW,EACXf,SAACO,EAAA,CAAO,QAAS,SAAY,CAC3B,KAAM,CAAE,KAAAd,CAAA,EAAS,MAAMD,EAAS,KAAK,QAAA,EAC/BwB,EAAYvB,GAAc,MAAM,OAAUA,GAAc,MAAM,IAAM,QAC1E,MAAOD,EAAiB,KAAK,aAAa,EAAE,OAAO,CAAE,KAAMK,EAAE,KAAM,OAAQ,WAAY,YAAamB,EAAU,EAC9G,MAAMzB,EAAA,CACR,EAAG,SAAA,WALH,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAKU,EACVS,EAAAA,OAACO,EAAA,CAAO,QAAQ,cAAc,QAAS,SAAY,CACjD,KAAM,CAAE,KAAAd,CAAA,EAAS,MAAMD,EAAS,KAAK,QAAA,EAC/BwB,EAAYvB,GAAc,MAAM,OAAUA,GAAc,MAAM,IAAM,QAC1E,MAAOD,EAAiB,KAAK,aAAa,EAAE,OAAO,CAAE,KAAMK,EAAE,KAAM,OAAQ,WAAY,YAAamB,EAAU,EAC9G,MAAMzB,EAAA,CACR,EAAG,SAAA,UALH,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAKS,CAAA,CAAA,EArBX,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAsBA,CAAA,EAvBF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAwBA,CAAA,GAhCa,GAAGM,EAAE,IAAI,IAAIA,EAAE,aAAa,GAA3C,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAiCA,CACD,GApCH,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAqCA,CAAA,CAAA,EA9CF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IA+CA,EAECV,GAAcE,GACbW,SAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,OAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,YAAUX,CAAA,CAAA,EAAzD,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAkE,WACjE,MAAA,CAAI,IAAKF,EAAY,IAAI,UAAU,UAAU,qCAA9C,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAkF,CAAA,CAAA,EAFpF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAGA,CAAA,CAAA,EAtDJ,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAwDA,CAAA,CAAA,EA5DF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IA6DA,CAAA,CAAA,EA7FF,OAAA,GAAA,CAAA,SAAA,mCAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IA8FA,CAEJ"}