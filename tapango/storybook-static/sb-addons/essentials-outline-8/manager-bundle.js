try {
  (() => {
    var t = __REACT__,
      {
        Children: E,
        Component: R,
        Fragment: k,
        Profiler: L,
        PureComponent: f,
        StrictMode: w,
        Suspense: U,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: D,
        cloneElement: v,
        createContext: N,
        createElement: x,
        createFactory: M,
        createRef: H,
        forwardRef: F,
        isValidElement: Y,
        lazy: G,
        memo: u,
        startTransition: W,
        unstable_act: K,
        useCallback: p,
        useContext: X,
        useDebugValue: V,
        useDeferredValue: z,
        useEffect: S,
        useId: J,
        useImperativeHandle: Z,
        useInsertionEffect: q,
        useLayoutEffect: j,
        useMemo: Q,
        useReducer: $,
        useRef: oo,
        useState: no,
        useSyncExternalStore: eo,
        useTransition: co,
        version: to,
      } = __REACT__;
    var io = __STORYBOOK_API__,
      {
        ActiveTabs: so,
        Consumer: uo,
        ManagerContext: po,
        Provider: So,
        RequestResponseError: mo,
        addons: l,
        combineParameters: Co,
        controlOrMetaKey: ho,
        controlOrMetaSymbol: _o,
        eventMatchesShortcut: Ao,
        eventToShortcut: bo,
        experimental_MockUniversalStore: Oo,
        experimental_UniversalStore: yo,
        experimental_requestResponse: Bo,
        experimental_useUniversalStore: Po,
        isMacLike: To,
        isShortcutTaken: go,
        keyToSymbol: Eo,
        merge: Ro,
        mockChannel: ko,
        optionOrAltSymbol: Lo,
        shortcutMatchesShortcut: fo,
        shortcutToHumanString: wo,
        types: d,
        useAddonState: Uo,
        useArgTypes: Do,
        useArgs: vo,
        useChannel: No,
        useGlobalTypes: xo,
        useGlobals: m,
        useParameter: Mo,
        useSharedState: Ho,
        useStoryPrepared: Fo,
        useStorybookApi: C,
        useStorybookState: Yo,
      } = __STORYBOOK_API__;
    var Vo = __STORYBOOK_COMPONENTS__,
      {
        A: zo,
        ActionBar: Jo,
        AddonPanel: Zo,
        Badge: qo,
        Bar: jo,
        Blockquote: Qo,
        Button: $o,
        ClipboardCode: on,
        Code: nn,
        DL: en,
        Div: cn,
        DocumentWrapper: tn,
        EmptyTabContent: In,
        ErrorFormatter: rn,
        FlexBar: an,
        Form: ln,
        H1: sn,
        H2: un,
        H3: pn,
        H4: Sn,
        H5: dn,
        H6: mn,
        HR: Cn,
        IconButton: h,
        IconButtonSkeleton: hn,
        Icons: _n,
        Img: An,
        LI: bn,
        Link: On,
        ListItem: yn,
        Loader: Bn,
        Modal: Pn,
        OL: Tn,
        P: gn,
        Placeholder: En,
        Pre: Rn,
        ProgressSpinner: kn,
        ResetWrapper: Ln,
        ScrollArea: fn,
        Separator: wn,
        Spaced: Un,
        Span: Dn,
        StorybookIcon: vn,
        StorybookLogo: Nn,
        Symbols: xn,
        SyntaxHighlighter: Mn,
        TT: Hn,
        TabBar: Fn,
        TabButton: Yn,
        TabWrapper: Gn,
        Table: Wn,
        Tabs: Kn,
        TabsState: Xn,
        TooltipLinkList: Vn,
        TooltipMessage: zn,
        TooltipNote: Jn,
        UL: Zn,
        WithTooltip: qn,
        WithTooltipPure: jn,
        Zoom: Qn,
        codeCommon: $n,
        components: oe,
        createCopyToClipboardFunction: ne,
        getStoryHref: ee,
        icons: ce,
        interleaveSeparators: te,
        nameSpaceClassNames: Ie,
        resetComponents: re,
        withReset: ae,
      } = __STORYBOOK_COMPONENTS__;
    var pe = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: Se,
        AccessibilityIcon: de,
        AccessibilityIgnoredIcon: me,
        AddIcon: Ce,
        AdminIcon: he,
        AlertAltIcon: _e,
        AlertIcon: Ae,
        AlignLeftIcon: be,
        AlignRightIcon: Oe,
        AppleIcon: ye,
        ArrowBottomLeftIcon: Be,
        ArrowBottomRightIcon: Pe,
        ArrowDownIcon: Te,
        ArrowLeftIcon: ge,
        ArrowRightIcon: Ee,
        ArrowSolidDownIcon: Re,
        ArrowSolidLeftIcon: ke,
        ArrowSolidRightIcon: Le,
        ArrowSolidUpIcon: fe,
        ArrowTopLeftIcon: we,
        ArrowTopRightIcon: Ue,
        ArrowUpIcon: De,
        AzureDevOpsIcon: ve,
        BackIcon: Ne,
        BasketIcon: xe,
        BatchAcceptIcon: Me,
        BatchDenyIcon: He,
        BeakerIcon: Fe,
        BellIcon: Ye,
        BitbucketIcon: Ge,
        BoldIcon: We,
        BookIcon: Ke,
        BookmarkHollowIcon: Xe,
        BookmarkIcon: Ve,
        BottomBarIcon: ze,
        BottomBarToggleIcon: Je,
        BoxIcon: Ze,
        BranchIcon: qe,
        BrowserIcon: je,
        ButtonIcon: Qe,
        CPUIcon: $e,
        CalendarIcon: oc,
        CameraIcon: nc,
        CameraStabilizeIcon: ec,
        CategoryIcon: cc,
        CertificateIcon: tc,
        ChangedIcon: Ic,
        ChatIcon: rc,
        CheckIcon: ac,
        ChevronDownIcon: lc,
        ChevronLeftIcon: ic,
        ChevronRightIcon: sc,
        ChevronSmallDownIcon: uc,
        ChevronSmallLeftIcon: pc,
        ChevronSmallRightIcon: Sc,
        ChevronSmallUpIcon: dc,
        ChevronUpIcon: mc,
        ChromaticIcon: Cc,
        ChromeIcon: hc,
        CircleHollowIcon: _c,
        CircleIcon: Ac,
        ClearIcon: bc,
        CloseAltIcon: Oc,
        CloseIcon: yc,
        CloudHollowIcon: Bc,
        CloudIcon: Pc,
        CogIcon: Tc,
        CollapseIcon: gc,
        CommandIcon: Ec,
        CommentAddIcon: Rc,
        CommentIcon: kc,
        CommentsIcon: Lc,
        CommitIcon: fc,
        CompassIcon: wc,
        ComponentDrivenIcon: Uc,
        ComponentIcon: Dc,
        ContrastIcon: vc,
        ContrastIgnoredIcon: Nc,
        ControlsIcon: xc,
        CopyIcon: Mc,
        CreditIcon: Hc,
        CrossIcon: Fc,
        DashboardIcon: Yc,
        DatabaseIcon: Gc,
        DeleteIcon: Wc,
        DiamondIcon: Kc,
        DirectionIcon: Xc,
        DiscordIcon: Vc,
        DocChartIcon: zc,
        DocListIcon: Jc,
        DocumentIcon: Zc,
        DownloadIcon: qc,
        DragIcon: jc,
        EditIcon: Qc,
        EllipsisIcon: $c,
        EmailIcon: ot,
        ExpandAltIcon: nt,
        ExpandIcon: et,
        EyeCloseIcon: ct,
        EyeIcon: tt,
        FaceHappyIcon: It,
        FaceNeutralIcon: rt,
        FaceSadIcon: at,
        FacebookIcon: lt,
        FailedIcon: it,
        FastForwardIcon: st,
        FigmaIcon: ut,
        FilterIcon: pt,
        FlagIcon: St,
        FolderIcon: dt,
        FormIcon: mt,
        GDriveIcon: Ct,
        GithubIcon: ht,
        GitlabIcon: _t,
        GlobeIcon: At,
        GoogleIcon: bt,
        GraphBarIcon: Ot,
        GraphLineIcon: yt,
        GraphqlIcon: Bt,
        GridAltIcon: Pt,
        GridIcon: Tt,
        GrowIcon: gt,
        HeartHollowIcon: Et,
        HeartIcon: Rt,
        HomeIcon: kt,
        HourglassIcon: Lt,
        InfoIcon: ft,
        ItalicIcon: wt,
        JumpToIcon: Ut,
        KeyIcon: Dt,
        LightningIcon: vt,
        LightningOffIcon: Nt,
        LinkBrokenIcon: xt,
        LinkIcon: Mt,
        LinkedinIcon: Ht,
        LinuxIcon: Ft,
        ListOrderedIcon: Yt,
        ListUnorderedIcon: Gt,
        LocationIcon: Wt,
        LockIcon: Kt,
        MarkdownIcon: Xt,
        MarkupIcon: Vt,
        MediumIcon: zt,
        MemoryIcon: Jt,
        MenuIcon: Zt,
        MergeIcon: qt,
        MirrorIcon: jt,
        MobileIcon: Qt,
        MoonIcon: $t,
        NutIcon: oI,
        OutboxIcon: nI,
        OutlineIcon: _,
        PaintBrushIcon: eI,
        PaperClipIcon: cI,
        ParagraphIcon: tI,
        PassedIcon: II,
        PhoneIcon: rI,
        PhotoDragIcon: aI,
        PhotoIcon: lI,
        PhotoStabilizeIcon: iI,
        PinAltIcon: sI,
        PinIcon: uI,
        PlayAllHollowIcon: pI,
        PlayBackIcon: SI,
        PlayHollowIcon: dI,
        PlayIcon: mI,
        PlayNextIcon: CI,
        PlusIcon: hI,
        PointerDefaultIcon: _I,
        PointerHandIcon: AI,
        PowerIcon: bI,
        PrintIcon: OI,
        ProceedIcon: yI,
        ProfileIcon: BI,
        PullRequestIcon: PI,
        QuestionIcon: TI,
        RSSIcon: gI,
        RedirectIcon: EI,
        ReduxIcon: RI,
        RefreshIcon: kI,
        ReplyIcon: LI,
        RepoIcon: fI,
        RequestChangeIcon: wI,
        RewindIcon: UI,
        RulerIcon: DI,
        SaveIcon: vI,
        SearchIcon: NI,
        ShareAltIcon: xI,
        ShareIcon: MI,
        ShieldIcon: HI,
        SideBySideIcon: FI,
        SidebarAltIcon: YI,
        SidebarAltToggleIcon: GI,
        SidebarIcon: WI,
        SidebarToggleIcon: KI,
        SpeakerIcon: XI,
        StackedIcon: VI,
        StarHollowIcon: zI,
        StarIcon: JI,
        StatusFailIcon: ZI,
        StatusIcon: qI,
        StatusPassIcon: jI,
        StatusWarnIcon: QI,
        StickerIcon: $I,
        StopAltHollowIcon: or,
        StopAltIcon: nr,
        StopIcon: er,
        StorybookIcon: cr,
        StructureIcon: tr,
        SubtractIcon: Ir,
        SunIcon: rr,
        SupportIcon: ar,
        SweepIcon: lr,
        SwitchAltIcon: ir,
        SyncIcon: sr,
        TabletIcon: ur,
        ThumbsUpIcon: pr,
        TimeIcon: Sr,
        TimerIcon: dr,
        TransferIcon: mr,
        TrashIcon: Cr,
        TwitterIcon: hr,
        TypeIcon: _r,
        UbuntuIcon: Ar,
        UndoIcon: br,
        UnfoldIcon: Or,
        UnlockIcon: yr,
        UnpinIcon: Br,
        UploadIcon: Pr,
        UserAddIcon: Tr,
        UserAltIcon: gr,
        UserIcon: Er,
        UsersIcon: Rr,
        VSCodeIcon: kr,
        VerifiedIcon: Lr,
        VideoIcon: fr,
        WandIcon: wr,
        WatchIcon: Ur,
        WindowsIcon: Dr,
        WrenchIcon: vr,
        XIcon: Nr,
        YoutubeIcon: xr,
        ZoomIcon: Mr,
        ZoomOutIcon: Hr,
        ZoomResetIcon: Fr,
        iconList: Yr,
      } = __STORYBOOK_ICONS__;
    var i = 'storybook/outline',
      A = 'outline',
      b = u(function () {
        let [c, I] = m(),
          s = C(),
          r = [!0, 'true'].includes(c[A]),
          a = p(() => I({ [A]: !r }), [r]);
        return (
          S(() => {
            s.setAddonShortcut(i, {
              label: 'Toggle Outline',
              defaultShortcut: ['alt', 'O'],
              actionName: 'outline',
              showInMenu: !1,
              action: a,
            });
          }, [a, s]),
          t.createElement(
            h,
            {
              key: 'outline',
              active: r,
              title: 'Apply outlines to the preview',
              onClick: a,
            },
            t.createElement(_, null)
          )
        );
      });
    l.register(i, () => {
      l.add(i, {
        title: 'Outline',
        type: d.TOOL,
        match: ({ viewMode: c, tabId: I }) =>
          !!(c && c.match(/^(story|docs)$/)) && !I,
        render: () => t.createElement(b, null),
      });
    });
  })();
} catch (e) {
  console.error(
    '[Storybook] One of your manager-entries failed: ' + import.meta.url,
    e
  );
}
