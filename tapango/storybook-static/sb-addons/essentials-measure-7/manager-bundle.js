try {
  (() => {
    var t = __REACT__,
      {
        Children: g,
        Component: E,
        Fragment: L,
        Profiler: R,
        PureComponent: k,
        StrictMode: f,
        Suspense: w,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: D,
        cloneElement: U,
        createContext: M,
        createElement: N,
        createFactory: v,
        createRef: x,
        forwardRef: H,
        isValidElement: F,
        lazy: Y,
        memo: G,
        startTransition: W,
        unstable_act: X,
        useCallback: u,
        useContext: K,
        useDebugValue: V,
        useDeferredValue: z,
        useEffect: d,
        useId: J,
        useImperativeHandle: Z,
        useInsertionEffect: q,
        useLayoutEffect: j,
        useMemo: Q,
        useReducer: $,
        useRef: oo,
        useState: no,
        useSyncExternalStore: eo,
        useTransition: co,
        version: to,
      } = __REACT__;
    var io = __STORYBOOK_API__,
      {
        ActiveTabs: so,
        Consumer: uo,
        ManagerContext: po,
        Provider: mo,
        RequestResponseError: So,
        addons: l,
        combineParameters: Co,
        controlOrMetaKey: _o,
        controlOrMetaSymbol: ho,
        eventMatchesShortcut: bo,
        eventToShortcut: Ao,
        experimental_MockUniversalStore: To,
        experimental_UniversalStore: yo,
        experimental_requestResponse: Bo,
        experimental_useUniversalStore: Oo,
        isMacLike: Po,
        isShortcutTaken: go,
        keyToSymbol: Eo,
        merge: Lo,
        mockChannel: Ro,
        optionOrAltSymbol: ko,
        shortcutMatchesShortcut: fo,
        shortcutToHumanString: wo,
        types: p,
        useAddonState: Do,
        useArgTypes: Uo,
        useArgs: Mo,
        useChannel: No,
        useGlobalTypes: vo,
        useGlobals: m,
        useParameter: xo,
        useSharedState: Ho,
        useStoryPrepared: Fo,
        useStorybookApi: S,
        useStorybookState: Yo,
      } = __STORYBOOK_API__;
    var Vo = __STORYBOOK_COMPONENTS__,
      {
        A: zo,
        ActionBar: Jo,
        AddonPanel: Zo,
        Badge: qo,
        Bar: jo,
        Blockquote: Qo,
        Button: $o,
        ClipboardCode: on,
        Code: nn,
        DL: en,
        Div: cn,
        DocumentWrapper: tn,
        EmptyTabContent: In,
        ErrorFormatter: rn,
        FlexBar: an,
        Form: ln,
        H1: sn,
        H2: un,
        H3: dn,
        H4: pn,
        H5: mn,
        H6: Sn,
        HR: Cn,
        IconButton: C,
        IconButtonSkeleton: _n,
        Icons: hn,
        Img: bn,
        LI: An,
        Link: Tn,
        ListItem: yn,
        Loader: Bn,
        Modal: On,
        OL: Pn,
        P: gn,
        Placeholder: En,
        Pre: Ln,
        ProgressSpinner: Rn,
        ResetWrapper: kn,
        ScrollArea: fn,
        Separator: wn,
        Spaced: Dn,
        Span: Un,
        StorybookIcon: Mn,
        StorybookLogo: Nn,
        Symbols: vn,
        SyntaxHighlighter: xn,
        TT: Hn,
        TabBar: Fn,
        TabButton: Yn,
        TabWrapper: Gn,
        Table: Wn,
        Tabs: Xn,
        TabsState: Kn,
        TooltipLinkList: Vn,
        TooltipMessage: zn,
        TooltipNote: Jn,
        UL: Zn,
        WithTooltip: qn,
        WithTooltipPure: jn,
        Zoom: Qn,
        codeCommon: $n,
        components: oe,
        createCopyToClipboardFunction: ne,
        getStoryHref: ee,
        icons: ce,
        interleaveSeparators: te,
        nameSpaceClassNames: Ie,
        resetComponents: re,
        withReset: ae,
      } = __STORYBOOK_COMPONENTS__;
    var de = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: pe,
        AccessibilityIcon: me,
        AccessibilityIgnoredIcon: Se,
        AddIcon: Ce,
        AdminIcon: _e,
        AlertAltIcon: he,
        AlertIcon: be,
        AlignLeftIcon: Ae,
        AlignRightIcon: Te,
        AppleIcon: ye,
        ArrowBottomLeftIcon: Be,
        ArrowBottomRightIcon: Oe,
        ArrowDownIcon: Pe,
        ArrowLeftIcon: ge,
        ArrowRightIcon: Ee,
        ArrowSolidDownIcon: Le,
        ArrowSolidLeftIcon: Re,
        ArrowSolidRightIcon: ke,
        ArrowSolidUpIcon: fe,
        ArrowTopLeftIcon: we,
        ArrowTopRightIcon: De,
        ArrowUpIcon: Ue,
        AzureDevOpsIcon: Me,
        BackIcon: Ne,
        BasketIcon: ve,
        BatchAcceptIcon: xe,
        BatchDenyIcon: He,
        BeakerIcon: Fe,
        BellIcon: Ye,
        BitbucketIcon: Ge,
        BoldIcon: We,
        BookIcon: Xe,
        BookmarkHollowIcon: Ke,
        BookmarkIcon: Ve,
        BottomBarIcon: ze,
        BottomBarToggleIcon: Je,
        BoxIcon: Ze,
        BranchIcon: qe,
        BrowserIcon: je,
        ButtonIcon: Qe,
        CPUIcon: $e,
        CalendarIcon: oc,
        CameraIcon: nc,
        CameraStabilizeIcon: ec,
        CategoryIcon: cc,
        CertificateIcon: tc,
        ChangedIcon: Ic,
        ChatIcon: rc,
        CheckIcon: ac,
        ChevronDownIcon: lc,
        ChevronLeftIcon: ic,
        ChevronRightIcon: sc,
        ChevronSmallDownIcon: uc,
        ChevronSmallLeftIcon: dc,
        ChevronSmallRightIcon: pc,
        ChevronSmallUpIcon: mc,
        ChevronUpIcon: Sc,
        ChromaticIcon: Cc,
        ChromeIcon: _c,
        CircleHollowIcon: hc,
        CircleIcon: bc,
        ClearIcon: Ac,
        CloseAltIcon: Tc,
        CloseIcon: yc,
        CloudHollowIcon: Bc,
        CloudIcon: Oc,
        CogIcon: Pc,
        CollapseIcon: gc,
        CommandIcon: Ec,
        CommentAddIcon: Lc,
        CommentIcon: Rc,
        CommentsIcon: kc,
        CommitIcon: fc,
        CompassIcon: wc,
        ComponentDrivenIcon: Dc,
        ComponentIcon: Uc,
        ContrastIcon: Mc,
        ContrastIgnoredIcon: Nc,
        ControlsIcon: vc,
        CopyIcon: xc,
        CreditIcon: Hc,
        CrossIcon: Fc,
        DashboardIcon: Yc,
        DatabaseIcon: Gc,
        DeleteIcon: Wc,
        DiamondIcon: Xc,
        DirectionIcon: Kc,
        DiscordIcon: Vc,
        DocChartIcon: zc,
        DocListIcon: Jc,
        DocumentIcon: Zc,
        DownloadIcon: qc,
        DragIcon: jc,
        EditIcon: Qc,
        EllipsisIcon: $c,
        EmailIcon: ot,
        ExpandAltIcon: nt,
        ExpandIcon: et,
        EyeCloseIcon: ct,
        EyeIcon: tt,
        FaceHappyIcon: It,
        FaceNeutralIcon: rt,
        FaceSadIcon: at,
        FacebookIcon: lt,
        FailedIcon: it,
        FastForwardIcon: st,
        FigmaIcon: ut,
        FilterIcon: dt,
        FlagIcon: pt,
        FolderIcon: mt,
        FormIcon: St,
        GDriveIcon: Ct,
        GithubIcon: _t,
        GitlabIcon: ht,
        GlobeIcon: bt,
        GoogleIcon: At,
        GraphBarIcon: Tt,
        GraphLineIcon: yt,
        GraphqlIcon: Bt,
        GridAltIcon: Ot,
        GridIcon: Pt,
        GrowIcon: gt,
        HeartHollowIcon: Et,
        HeartIcon: Lt,
        HomeIcon: Rt,
        HourglassIcon: kt,
        InfoIcon: ft,
        ItalicIcon: wt,
        JumpToIcon: Dt,
        KeyIcon: Ut,
        LightningIcon: Mt,
        LightningOffIcon: Nt,
        LinkBrokenIcon: vt,
        LinkIcon: xt,
        LinkedinIcon: Ht,
        LinuxIcon: Ft,
        ListOrderedIcon: Yt,
        ListUnorderedIcon: Gt,
        LocationIcon: Wt,
        LockIcon: Xt,
        MarkdownIcon: Kt,
        MarkupIcon: Vt,
        MediumIcon: zt,
        MemoryIcon: Jt,
        MenuIcon: Zt,
        MergeIcon: qt,
        MirrorIcon: jt,
        MobileIcon: Qt,
        MoonIcon: $t,
        NutIcon: oI,
        OutboxIcon: nI,
        OutlineIcon: eI,
        PaintBrushIcon: cI,
        PaperClipIcon: tI,
        ParagraphIcon: II,
        PassedIcon: rI,
        PhoneIcon: aI,
        PhotoDragIcon: lI,
        PhotoIcon: iI,
        PhotoStabilizeIcon: sI,
        PinAltIcon: uI,
        PinIcon: dI,
        PlayAllHollowIcon: pI,
        PlayBackIcon: mI,
        PlayHollowIcon: SI,
        PlayIcon: CI,
        PlayNextIcon: _I,
        PlusIcon: hI,
        PointerDefaultIcon: bI,
        PointerHandIcon: AI,
        PowerIcon: TI,
        PrintIcon: yI,
        ProceedIcon: BI,
        ProfileIcon: OI,
        PullRequestIcon: PI,
        QuestionIcon: gI,
        RSSIcon: EI,
        RedirectIcon: LI,
        ReduxIcon: RI,
        RefreshIcon: kI,
        ReplyIcon: fI,
        RepoIcon: wI,
        RequestChangeIcon: DI,
        RewindIcon: UI,
        RulerIcon: _,
        SaveIcon: MI,
        SearchIcon: NI,
        ShareAltIcon: vI,
        ShareIcon: xI,
        ShieldIcon: HI,
        SideBySideIcon: FI,
        SidebarAltIcon: YI,
        SidebarAltToggleIcon: GI,
        SidebarIcon: WI,
        SidebarToggleIcon: XI,
        SpeakerIcon: KI,
        StackedIcon: VI,
        StarHollowIcon: zI,
        StarIcon: JI,
        StatusFailIcon: ZI,
        StatusIcon: qI,
        StatusPassIcon: jI,
        StatusWarnIcon: QI,
        StickerIcon: $I,
        StopAltHollowIcon: or,
        StopAltIcon: nr,
        StopIcon: er,
        StorybookIcon: cr,
        StructureIcon: tr,
        SubtractIcon: Ir,
        SunIcon: rr,
        SupportIcon: ar,
        SweepIcon: lr,
        SwitchAltIcon: ir,
        SyncIcon: sr,
        TabletIcon: ur,
        ThumbsUpIcon: dr,
        TimeIcon: pr,
        TimerIcon: mr,
        TransferIcon: Sr,
        TrashIcon: Cr,
        TwitterIcon: _r,
        TypeIcon: hr,
        UbuntuIcon: br,
        UndoIcon: Ar,
        UnfoldIcon: Tr,
        UnlockIcon: yr,
        UnpinIcon: Br,
        UploadIcon: Or,
        UserAddIcon: Pr,
        UserAltIcon: gr,
        UserIcon: Er,
        UsersIcon: Lr,
        VSCodeIcon: Rr,
        VerifiedIcon: kr,
        VideoIcon: fr,
        WandIcon: wr,
        WatchIcon: Dr,
        WindowsIcon: Ur,
        WrenchIcon: Mr,
        XIcon: Nr,
        YoutubeIcon: vr,
        ZoomIcon: xr,
        ZoomOutIcon: Hr,
        ZoomResetIcon: Fr,
        iconList: Yr,
      } = __STORYBOOK_ICONS__;
    var i = 'storybook/measure-addon',
      h = `${i}/tool`,
      b = () => {
        let [I, c] = m(),
          { measureEnabled: r } = I,
          s = S(),
          a = u(() => c({ measureEnabled: !r }), [c, r]);
        return (
          d(() => {
            s.setAddonShortcut(i, {
              label: 'Toggle Measure [M]',
              defaultShortcut: ['M'],
              actionName: 'measure',
              showInMenu: !1,
              action: a,
            });
          }, [a, s]),
          t.createElement(
            C,
            { key: h, active: r, title: 'Enable measure', onClick: a },
            t.createElement(_, null)
          )
        );
      };
    l.register(i, () => {
      l.add(h, {
        type: p.TOOL,
        title: 'Measure',
        match: ({ viewMode: I, tabId: c }) => I === 'story' && !c,
        render: () => t.createElement(b, null),
      });
    });
  })();
} catch (e) {
  console.error(
    '[Storybook] One of your manager-entries failed: ' + import.meta.url,
    e
  );
}
